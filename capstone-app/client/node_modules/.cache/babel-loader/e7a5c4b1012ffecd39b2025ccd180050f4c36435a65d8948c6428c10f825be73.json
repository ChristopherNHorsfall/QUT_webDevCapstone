{"ast":null,"code":"export const processOccupancyData = data => {\n  console.log(\"Processing occupancy data...\");\n  const formattedData = {};\n  data.forEach(row => {\n    const year = new Date(row.date).getFullYear();\n    if (!formattedData[year]) {\n      formattedData[year] = [];\n    }\n    formattedData[year].push({\n      x: new Date(row.date),\n      y: parseFloat(row.average_historical_occupancy)\n    });\n  });\n  return formattedData;\n};\nexport const filterAndProcessData = (data, lgaName) => {\n  if (!data || data.length === 0) return {};\n  const filteredData = data.filter(row => row.lga_name === lgaName);\n  const formattedData = {};\n  filteredData.forEach(row => {\n    const year = new Date(row.date).getFullYear();\n    if (!formattedData[year]) {\n      formattedData[year] = [];\n    }\n    formattedData[year].push({\n      x: new Date(row.date),\n      y: parseFloat(row.average_historical_occupancy)\n    });\n  });\n  return formattedData;\n};","map":{"version":3,"names":["processOccupancyData","data","console","log","formattedData","forEach","row","year","Date","date","getFullYear","push","x","y","parseFloat","average_historical_occupancy","filterAndProcessData","lgaName","length","filteredData","filter","lga_name"],"sources":["C:/Users/User/Projects/QUT_IF717_webDevCapstone/Project/capstone-app/client/src/Components/Utils/dataProcessing.js"],"sourcesContent":["export const processOccupancyData = (data) => {\r\n    console.log(\"Processing occupancy data...\");\r\n    \r\n    const formattedData = {};\r\n    data.forEach((row) => {\r\n        const year = new Date(row.date).getFullYear();\r\n        if (!formattedData[year]) {\r\n            formattedData[year] = [];\r\n        }\r\n        formattedData[year].push({\r\n            x: new Date(row.date),\r\n            y: parseFloat(row.average_historical_occupancy),\r\n        });\r\n    });\r\n    return formattedData;\r\n};\r\n\r\n\r\nexport const filterAndProcessData = (data, lgaName) => {\r\n    if (!data || data.length === 0) return {};\r\n\r\n    const filteredData = data.filter(row => row.lga_name === lgaName);\r\n    const formattedData = {};\r\n\r\n    filteredData.forEach((row) => {\r\n        const year = new Date(row.date).getFullYear();\r\n        if (!formattedData[year]) {\r\n            formattedData[year] = [];\r\n        }\r\n        formattedData[year].push({\r\n            x: new Date(row.date),\r\n            y: parseFloat(row.average_historical_occupancy),\r\n        });\r\n    });\r\n\r\n    return formattedData;\r\n};"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAIC,IAAI,IAAK;EAC1CC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;EAE3C,MAAMC,aAAa,GAAG,CAAC,CAAC;EACxBH,IAAI,CAACI,OAAO,CAAEC,GAAG,IAAK;IAClB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,GAAG,CAACG,IAAI,CAAC,CAACC,WAAW,CAAC,CAAC;IAC7C,IAAI,CAACN,aAAa,CAACG,IAAI,CAAC,EAAE;MACtBH,aAAa,CAACG,IAAI,CAAC,GAAG,EAAE;IAC5B;IACAH,aAAa,CAACG,IAAI,CAAC,CAACI,IAAI,CAAC;MACrBC,CAAC,EAAE,IAAIJ,IAAI,CAACF,GAAG,CAACG,IAAI,CAAC;MACrBI,CAAC,EAAEC,UAAU,CAACR,GAAG,CAACS,4BAA4B;IAClD,CAAC,CAAC;EACN,CAAC,CAAC;EACF,OAAOX,aAAa;AACxB,CAAC;AAGD,OAAO,MAAMY,oBAAoB,GAAGA,CAACf,IAAI,EAAEgB,OAAO,KAAK;EACnD,IAAI,CAAChB,IAAI,IAAIA,IAAI,CAACiB,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;EAEzC,MAAMC,YAAY,GAAGlB,IAAI,CAACmB,MAAM,CAACd,GAAG,IAAIA,GAAG,CAACe,QAAQ,KAAKJ,OAAO,CAAC;EACjE,MAAMb,aAAa,GAAG,CAAC,CAAC;EAExBe,YAAY,CAACd,OAAO,CAAEC,GAAG,IAAK;IAC1B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,GAAG,CAACG,IAAI,CAAC,CAACC,WAAW,CAAC,CAAC;IAC7C,IAAI,CAACN,aAAa,CAACG,IAAI,CAAC,EAAE;MACtBH,aAAa,CAACG,IAAI,CAAC,GAAG,EAAE;IAC5B;IACAH,aAAa,CAACG,IAAI,CAAC,CAACI,IAAI,CAAC;MACrBC,CAAC,EAAE,IAAIJ,IAAI,CAACF,GAAG,CAACG,IAAI,CAAC;MACrBI,CAAC,EAAEC,UAAU,CAACR,GAAG,CAACS,4BAA4B;IAClD,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,OAAOX,aAAa;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}