{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Projects\\\\QUT_IF717_webDevCapstone\\\\Project\\\\capstone-app\\\\client\\\\src\\\\Components\\\\SignInForm.js\",\n  _s = $RefreshSig$();\nimport { Form, Button, Container } from 'react-bootstrap';\nimport images from '../Assets/images';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignInForm() {\n  _s();\n  const formStyle = {\n    backgroundImage: `url(${images.bush01})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    height: '50vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n    color: 'white'\n  };\n  const overlayStyle = {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    padding: '20px',\n    borderRadius: '8px',\n    width: '100%',\n    maxWidth: '400px'\n  };\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setError('');\n    console.log('Submitting login form:', {\n      username,\n      password\n    });\n    // Prepare the request payload\n    const payload = {\n      username,\n      password\n    };\n    try {\n      console.log('Sending POST request to /login');\n      const response = await fetch('http://localhost:3000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      console.log('Response status:', response.status);\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.log('Error response data:', errorData);\n        throw new Error(errorData.message || 'Invalid credentials');\n      }\n      const data = await response.json();\n      console.log('Login successful, server response:', data.message);\n      localStorage.setItem(\"token\", data.token || \"logged-in\");\n      setIsLoggedIn(true);\n    } catch (err) {\n      console.error('Error during login:', err);\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: formStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: overlayStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: 'white',\n          textAlign: 'center'\n        },\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicUsername\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter username\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 13\n  }, this);\n}\n_s(SignInForm, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n_c = SignInForm;\nvar _c;\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"names":["Form","Button","Container","images","React","useState","jsxDEV","_jsxDEV","SignInForm","_s","formStyle","backgroundImage","bush01","backgroundSize","backgroundPosition","height","display","alignItems","justifyContent","position","color","overlayStyle","backgroundColor","padding","borderRadius","width","maxWidth","username","setUsername","password","setPassword","error","setError","handleSubmit","event","preventDefault","console","log","payload","response","fetch","method","headers","body","JSON","stringify","status","ok","errorData","json","Error","message","data","localStorage","setItem","token","setIsLoggedIn","err","style","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","variant","_c","$RefreshReg$"],"sources":["C:/Users/User/Projects/QUT_IF717_webDevCapstone/Project/capstone-app/client/src/Components/SignInForm.js"],"sourcesContent":["import { Form, Button, Container } from 'react-bootstrap';\r\nimport images from '../Assets/images';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function SignInForm () {\r\n        const formStyle = {\r\n            backgroundImage: `url(${images.bush01})`,\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            height: '50vh', \r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center', \r\n            position: 'relative',\r\n            color: 'white'\r\n        };\r\n    \r\n        const overlayStyle = {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)', \r\n            padding: '20px',\r\n            borderRadius: '8px',\r\n            width: '100%',\r\n            maxWidth: '400px', \r\n        };\r\n\r\n        const [username, setUsername] = useState('');\r\n        const [password, setPassword] = useState('');\r\n        const [error, setError] = useState('');\r\n\r\n        const handleSubmit = async (event) => {\r\n            event.preventDefault();\r\n            setError('');\r\n\r\n            console.log('Submitting login form:', { username, password });\r\n            // Prepare the request payload\r\n            const payload = { username, password };\r\n    \r\n            try {\r\n                console.log('Sending POST request to /login');\r\n\r\n                const response = await fetch('http://localhost:3000/login', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(payload),\r\n                });\r\n                console.log('Response status:', response.status);\r\n    \r\n                if (!response.ok) {\r\n                    const errorData = await response.json();\r\n                    console.log('Error response data:', errorData);\r\n                    throw new Error(errorData.message || 'Invalid credentials');\r\n                }\r\n    \r\n                const data = await response.json();\r\n                console.log('Login successful, server response:', data.message);\r\n                localStorage.setItem(\"token\", data.token || \"logged-in\");\r\n                setIsLoggedIn(true);\r\n\r\n            } catch (err) {\r\n                console.error('Error during login:', err);\r\n                setError(err.message);\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div style={formStyle}>\r\n                <div style={overlayStyle}>\r\n                    <h2 style={{ color: 'white', textAlign: 'center' }}>Sign In</h2>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group controlId=\"formBasicUsername\">\r\n                                <Form.Label>Username</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter username\"\r\n                                    value={username}\r\n                                    onChange={(e) => setUsername(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">\r\n                                Sign In\r\n                            </Button>\r\n                            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n                        </Form>\r\n                </div>\r\n            </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}